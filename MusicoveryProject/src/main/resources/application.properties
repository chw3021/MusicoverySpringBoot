# Spring 기본 설정
spring.application.name=MusicoveryProject 

# Spotify API 설정
spotify.client.id=432fcaefc80a48469e536fa91cc55064
spotify.client.secret=53942b31fbf244909db3bb277c55625f
spotify.api.token_url=https://accounts.spotify.com/api/token
spotify.api.base_url=https://api.spotify.com/v1
spotify.api.redirect_uri=http://localhost:8080/api/spotify/callback

# Hibernate 설정
spring.jpa.hibernate.ddl-auto=update
# ⭐ 기존 테이블 유지
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.open-in-view=true

# AI 추천 API
ai.recommendation.api=http://localhost:5000/ai

# AWS RDS MySQL 설정
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://musicovery-instance.chaq6mw8k1oj.ap-southeast-2.rds.amazonaws.com:3306/musicovery_db?serverTimezone=UTC&characterEncoding=UTF-8
spring.datasource.username=root
spring.datasource.password=root1234
spring.datasource.hikari.maximum-pool-size=10
# 커넥션 풀 크기 조정
spring.datasource.hikari.connection-timeout=30000
# 타임아웃 설정 (30초)

# MySQL Dialect 설정 (MySQL 8 이상이라면)s
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect

gemini.api.key=AIzaSyDuaLwik2HbnYgQZnDjV6Xrs1N5ARfnyac

# OAuth2 기본 설정
spring.security.oauth2.client.registration.google.client-id=241015042968-a48nfou1oqtopen45454lp67me8tvmtr.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.google.scope=email,profile
spring.security.oauth2.client.registration.google.client-authentication-method=post
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code

spring.security.oauth2.client.registration.spotify.client-id=432fcaefc80a48469e536fa91cc55064
spring.security.oauth2.client.registration.spotify.client-secret=53942b31fbf244909db3bb277c55625f
spring.security.oauth2.client.registration.spotify.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.spotify.scope=user-read-email
spring.security.oauth2.client.registration.spotify.client-authentication-method=post
spring.security.oauth2.client.registration.spotify.authorization-grant-type=authorization_code

spring.security.oauth2.client.provider.spotify.authorization-uri=https://accounts.spotify.com/authorize
spring.security.oauth2.client.provider.spotify.token-uri=https://accounts.spotify.com/api/token
spring.security.oauth2.client.provider.spotify.user-info-uri=https://api.spotify.com/v1/me
spring.security.oauth2.client.provider.spotify.user-name-attribute=id

# 파일 저장 경로 설정
file.upload-dir=src/main/resources/static/images
spring.web.resources.static-locations=file:src/main/resources/static/

# 파일 업로드 크기 제한 설정
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# 이메일 인증용 SMTP 설정 (Gmail 예시)
#spring.mail.host=smtp.gmail.com
#spring.mail.port=587
#spring.mail.username=@gmail.com
#spring.mail.password=YOUR_APP_PASSWORD
#spring.mail.properties.mail.smtp.auth=true
#spring.mail.properties.mail.smtp.starttls.enable=true
#spring.mail.properties.mail.smtp.starttls.required=true
#spring.mail.properties.mail.smtp.connectiontimeout=5000
#spring.mail.properties.mail.smtp.timeout=5000
#spring.mail.properties.mail.smtp.writetimeout=5000